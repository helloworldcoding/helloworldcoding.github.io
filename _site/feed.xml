<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-01-24T13:21:43+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Hello world, Let’s Coding!</title><subtitle>Keeping looking,don't settle.</subtitle><entry><title type="html">A devops flow</title><link href="http://localhost:4000/devops-flow/" rel="alternate" type="text/html" title="A devops flow" /><published>2019-01-23T00:00:00+08:00</published><updated>2019-01-23T00:00:00+08:00</updated><id>http://localhost:4000/devops-flow</id><content type="html" xml:base="http://localhost:4000/devops-flow/">&lt;div class=&quot;mermaid&quot;&gt;
graph TB
	
	subgraph devops
		test((&quot;fa:fa-users Test&quot;))
		dev((&quot;fa:fa-user Dev&quot;))
		ops((&quot;Ops&quot;))
		branch(&quot;branch&quot;)

		dev --&amp;gt;|创建分支| branch
		branch --&amp;gt;|jenkins| jenkins[&quot;jenkins&quot;]
	end
	
	tes1t[&quot;fa:fa-camera-retro:5x Camera&quot;]

	jenkins[&quot;fa:fa-futbol:fa-5x Iggool&quot;]

     classDef green fill:#9f6,stroke:#333,stroke-width:2px;
     classDef orange fill:#f96,stroke:#333,stroke-width:4px;
     class sq,e green
     class di orange

&lt;/div&gt;</content><author><name></name></author><summary type="html">graph TB subgraph devops test((&quot;fa:fa-users Test&quot;)) dev((&quot;fa:fa-user Dev&quot;)) ops((&quot;Ops&quot;)) branch(&quot;branch&quot;)</summary></entry><entry><title type="html">Vimscript note 1</title><link href="http://localhost:4000/vimscript-note-1/" rel="alternate" type="text/html" title="Vimscript note 1" /><published>2019-01-23T00:00:00+08:00</published><updated>2019-01-23T00:00:00+08:00</updated><id>http://localhost:4000/vimscript-note-1</id><content type="html" xml:base="http://localhost:4000/vimscript-note-1/">&lt;h3 id=&quot;启动vim不加载vimrc&quot;&gt;启动vim不加载.vimrc&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim -u NONE -N    -N 就是和vi不兼容
-u &amp;lt;vimrc&amp;gt;		Use &amp;lt;vimrc&amp;gt; instead of any .vimrc
-N			Not fully Vi compatible: 'nocompatible' ### 注释 

&quot;  这就是注释,双引号之后的就是注释内容
但是下面的注释会失效。。
:map &amp;lt;space&amp;gt; viw &quot; 按下空格键高亮选中一个单词	

所以vim的注释，最好不要行末添加
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;切换布尔选项&quot;&gt;!切换布尔选项&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:set number!   或:set nu!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;查看配置的值&quot;&gt;?查看配置的值&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:set fileencoding? 返回fileencoding=utf-8
:set number? 返回 number 或 nonumber
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;键盘映射&quot;&gt;键盘映射&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;normal模式下的简单映射&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :map - dd   按下 - 就相当于dd，会删除一行
  也可以用&amp;lt;keyname&amp;gt;来告诉vim一个特殊的按键
  :map &amp;lt;space&amp;gt; viw  按下空格，vim将高亮选中一个单词
	
  :unmap - 取消-的映射
  :unmap &amp;lt;space&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;nmap 在normal模式下的映射&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :nmap - ddp
  取消映射
  :nunmap -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vmap 在visual模式下的映射&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  visual模式下，按下\,会把小写字母变大写
  :vmap \ U 
  取消映射
  :vunmap \
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;imap 在insert模式下的映射&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  在insert模式下，ctrl+d 会删除一行
  :imap &amp;lt;c-d&amp;gt; &amp;lt;esc&amp;gt;ddi   
  取消映射
  :iunmap &amp;lt;c-d&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;映射可能会出现递归调用&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :nmap - dd
  :namp \ -
  在normal模式下，按下\,vim会解释为-,而 -会继续被解析为 dd，最后就是删除了一行
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;非递归映射*noremap&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :nmap x dd
  :nnoremap \ x
  当按下\ 就是x，删除一个字符，vim不会把x再解析为dd

  ** 应该在所有的情况下使用 noremap **
  &quot; insert mode下jj --&amp;gt; &amp;lt;esc&amp;gt;
  inoremap jj &amp;lt;esc&amp;gt;
  noremap/nnoremap , vnoremap, inoremap
  取消非递归映射(和取消递归映射的方法一样)
  :unnmap  \

  :map x &amp;lt;nop&amp;gt; 就会让按键x失效

  :nnoremap &amp;lt;buffer&amp;gt; Q x 只在当前缓冲区生效
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;leaders导航键&quot;&gt;Leaders(导航键?)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim默认的leader是\

:let mapleader = &quot;-&quot;  把leader键设置为-
在配置文件的其他地方，就用&amp;lt;leader&amp;gt;,而不是&quot;-&quot;

local leader 这个leader只用于那些对某类文件(python,html)而设置的映射

:let maplocalleader = &quot;\\&quot;  把loacalleader设置为\,以为\\会转意为\
如果要设定一个只会用户特定缓冲区的映射，一般会使用 &amp;lt;localleader&amp;gt;,而不是&amp;lt;leader&amp;gt;
使用&amp;lt;leader&amp;gt;和&amp;lt;localleader&amp;gt;按键就像设置了一种命名空间,用&amp;lt;localleader&amp;gt;来设置本地映射，会防止你爹插件覆盖别人的全局映射

打开vimrc文件
nnoremap &amp;lt;leader&amp;gt;ev :vsplit $MYVIMRC&amp;lt;cr&amp;gt;
重新加载vimrc文件
nnoremap &amp;lt;leader&amp;gt;sv :source $MYVIMRC&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;abbreviations&quot;&gt;Abbreviations&lt;/h3&gt;

&lt;p&gt;在一个abbrevivation后输入一个 non-keyword character后，vim会替换那个abbrevivation
not-keyword character指的是那些不在iskeyword选项中的字符(iskeyword=@,48-57,_,192-255)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;insert模式下的abbrevivations&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :iabbrev adn and
  :iabbrev ture true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;replace模式下的abbrevivations&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;command模式下的abbrevivations&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;自动命令&quot;&gt;自动命令&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:autocmd BufNewFile * :write  &quot;该命令会在打开一个文件后，自动自动保存
         ^          ^ ^
         |          | |
         |          | 要执行的命令
         |          | 
         |          用于事件过滤的&quot;模式pattern&quot; 
         |           
         要监听的事件          

:autocmd BufNewFile *.php :write  只会保存php文件
:autocmd BufWritePre *.html :normal gg=G  在保存html文档之前，先格式化
多个事件用逗号分隔
:autocmd BufNewFile,BufRead *.html setlocal nowarp
vim脚本编程中，一般会同时使用BufRead和BufNewFile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;所有的事件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Name			triggered by ~

	Reading
|BufNewFile|		starting to edit a file that doesn't exist
|BufReadPre|		starting to edit a new buffer, before reading the file
|BufRead|		starting to edit a new buffer, after reading the file
|BufReadPost|		starting to edit a new buffer, after reading the file
|BufReadCmd|		before starting to edit a new buffer |Cmd-event|

|FileReadPre|		before reading a file with a &quot;:read&quot; command
|FileReadPost|		after reading a file with a &quot;:read&quot; command
|FileReadCmd|		before reading a file with a &quot;:read&quot; command |Cmd-event|

|FilterReadPre|		before reading a file from a filter command
|FilterReadPost|	after reading a file from a filter command

|StdinReadPre|		before reading from stdin into the buffer
|StdinReadPost|		After reading from the stdin into the buffer

	Writing
|BufWrite|		starting to write the whole buffer to a file
|BufWritePre|		starting to write the whole buffer to a file
|BufWritePost|		after writing the whole buffer to a file
|BufWriteCmd|		before writing the whole buffer to a file |Cmd-event|

|FileWritePre|		starting to write part of a buffer to a file
|FileWritePost|		after writing part of a buffer to a file
|FileWriteCmd|		before writing part of a buffer to a file |Cmd-event|

|FileAppendPre|		starting to append to a file
|FileAppendPost|	after appending to a file
|FileAppendCmd|		before appending to a file |Cmd-event|

|FilterWritePre|	starting to write a file for a filter command or diff
|FilterWritePost|	after writing a file for a filter command or diff

	Buffers
|BufAdd|		just after adding a buffer to the buffer list
|BufCreate|		just after adding a buffer to the buffer list
|BufDelete|		before deleting a buffer from the buffer list
|BufWipeout|		before completely deleting a buffer

|BufFilePre|		before changing the name of the current buffer
|BufFilePost|		after changing the name of the current buffer

|BufEnter|		after entering a buffer
|BufLeave|		before leaving to another buffer
|BufWinEnter|		after a buffer is displayed in a window
|BufWinLeave|		before a buffer is removed from a window

|BufUnload|		before unloading a buffer
|BufHidden|		just after a buffer has become hidden
|BufNew|		just after creating a new buffer

|SwapExists|		detected an existing swap file

	Options
|FileType|		when the 'filetype' option has been set
|Syntax|		when the 'syntax' option has been set
|EncodingChanged|	after the 'encoding' option has been changed
|TermChanged|		after the value of 'term' has changed
|OptionSet|		after setting any option

	Startup and exit
|VimEnter|		after doing all the startup stuff
|GUIEnter|		after starting the GUI successfully
|GUIFailed|		after starting the GUI failed
|TermResponse|		after the terminal response to |t_RV| is received

|QuitPre|		when using `:quit`, before deciding whether to quit
|VimLeavePre|		before exiting Vim, before writing the viminfo file
|VimLeave|		before exiting Vim, after writing the viminfo file

	Various
|FileChangedShell|	Vim notices that a file changed since editing started
|FileChangedShellPost|	After handling a file changed since editing started
|FileChangedRO|		before making the first change to a read-only file

|ShellCmdPost|		after executing a shell command
|ShellFilterPost|	after filtering with a shell command

|CmdUndefined|		a user command is used but it isn't defined
|FuncUndefined|		a user function is used but it isn't defined
|SpellFileMissing|	a spell file is used but it can't be found
|SourcePre|		before sourcing a Vim script
|SourceCmd|		before sourcing a Vim script |Cmd-event|

|VimResized|		after the Vim window size changed
|FocusGained|		Vim got input focus
|FocusLost|		Vim lost input focus
|CursorHold|		the user doesn't press a key for a while
|CursorHoldI|		the user doesn't press a key for a while in Insert mode
|CursorMoved|		the cursor was moved in Normal mode
|CursorMovedI|		the cursor was moved in Insert mode

|WinNew|		after creating a new window
|TabNew|		after creating a new tab page
|TabClosed|		after closing a tab page
|WinEnter|		after entering another window
|WinLeave|		before leaving a window
|TabEnter|		after entering another tab page
|TabLeave|		before leaving a tab page
|CmdwinEnter|		after entering the command-line window
|CmdwinLeave|		before leaving the command-line window

|InsertEnter|		starting Insert mode
|InsertChange|		when typing &amp;lt;Insert&amp;gt; while in Insert or Replace mode
|InsertLeave|		when leaving Insert mode
|InsertCharPre|		when a character was typed in Insert mode, before
			inserting it

|TextChanged|		after a change was made to the text in Normal mode
|TextChangedI|		after a change was made to the text in Insert mode
|TextYankPost|		after text is yanked or deleted

|ColorScheme|		after loading a color scheme

|RemoteReply|		a reply from a server Vim was received

|QuickFixCmdPre|	before a quickfix command is run
|QuickFixCmdPost|	after a quickfix command is run

|SessionLoadPost|	after loading a session file

|MenuPopup|		just before showing the popup menu
|CompleteDone|		after Insert mode completion is done

|User|			to be used in combination with &quot;:doautocmd&quot;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="vim" /><category term="vimscript" /><summary type="html">启动vim不加载.vimrc</summary></entry><entry><title type="html">The new git branch model(add G1)</title><link href="http://localhost:4000/new-git-branch/" rel="alternate" type="text/html" title="The new  git branch model(add G1)" /><published>2019-01-22T00:00:00+08:00</published><updated>2019-01-22T00:00:00+08:00</updated><id>http://localhost:4000/new-git-branch</id><content type="html" xml:base="http://localhost:4000/new-git-branch/">&lt;div class=&quot;mermaid&quot;&gt;
	sequenceDiagram
		participant MasterG2
		participant Master
		participant Dev as F分支
		participant Bg0
		participant Bg2 as Bg2/F2
		participant Test
		participant Release
		participant ReleaseG2

		Note over Master,Release:特性分支(f分支)开发流程 
		Master -&amp;gt;&amp;gt;+ Dev:开发拉f分支
		Dev --&amp;gt;&amp;gt; Dev: 开发自测
		loop 提测
			Dev -&amp;gt;&amp;gt; Test:F分支合并到Test分支
			Note over Test:是否有冲突
			alt 没有有冲突
				Note over Test :jenkins构建test环境
				Note over Test:验证测试环境
				alt 测试环境验证通过
					Note over Dev :F分支能否合并到Release分支
					alt 能合并
						Dev -&amp;gt;&amp;gt; Release:F分支合并到Release
						Note over Release :是否有冲突
						alt 没有冲突
							Note over Release :jenkins构建beta g0
							Note over Release:验证beta g0环境
							alt beta g0环境验证通过
								Note over Release: 积累一天
								Note over Release : jenkins构建prod g0
								Note over Release : 验证prod g0
								alt prod g0验证通过
									Release -&amp;gt;&amp;gt;- Dev : 删除所有的合并到Relase的F分支
									Release -&amp;gt;&amp;gt; Master : Release分支合并到Master
								else prod g0没有验证通过
									Release --&amp;gt;&amp;gt; Dev: prod g0验证没有通过，排查原因
								end
							else
								Release --&amp;gt;&amp;gt; Dev: beta g0测试不通过, 排查问题
							end
						else  有冲突
							Release --&amp;gt;&amp;gt; Dev : 开发同学先解决冲突,再次提测
						end
					else F分支不能合并到Release,原因：
						Note over Dev: 过了14:00
						Note over Dev: 距离灰度发布不足两天
						Note over Dev: 灰度发布期间
					end
				else 测试环境验证不通过
					Test --&amp;gt;&amp;gt; Dev:测试环境不通过,排查问题
				end
			else 有冲突
				Test --&amp;gt;&amp;gt; Dev :先解决冲突，再提测
			end
		end

		Note over Master,Release:Bg0分支开发流程(解决线上g0环境的bug)
		Note over Release: 灰度前后验证prod G0环境
		alt prod g0环境验证通过
		else prod g0验证不通过
			Master -&amp;gt;&amp;gt;+ Bg0 : 从Master拉取一个Bg0分支
			Bg0 --&amp;gt;&amp;gt; Bg0 : 开发自测
			Bg0 -&amp;gt;&amp;gt; Test : 合并到Test分支
			alt Bg0合并到Test没有冲突
				Note over Test:	jenkins 构建测试环境，并验证
				alt 测试环境验证通过
					Bg0 -&amp;gt;&amp;gt; Release: Bg0合并到Release分支 
					alt 合并没有冲突
						Note over Release :jenkins构建beta g0环境，并验证
						alt beta g0验证通过
							Note over Release:构建 prod g0,并验证
							alt prod g0通过
								Release -&amp;gt;&amp;gt; Master: 合并到Master分支,删除Bg0分支
								deactivate Bg0
							else  失败
								Release --&amp;gt;&amp;gt; Bg0 : prod g0未通过，排查原因，再提测
							end
						else 失败
							Release --&amp;gt;&amp;gt; Bg0: beta g0未通过，排查原因，再提测	
						end
					else Bg0合并Release发生冲突
						Release --&amp;gt;&amp;gt; Bg0: 解决冲突，重新提测
					end
				else 测试环境验证不通过
					Test --&amp;gt;&amp;gt; Bg0: 查找原因，重新提测
				end
			else Bg0合并到Test有冲突 
				Test --&amp;gt;&amp;gt; Bg0:解决冲突，重新提测	
			end
		end

		Note over MasterG2, ReleaseG2 : 全量发布
		Note right of ReleaseG2:prod环境全量发布
		Note over Release,ReleaseG2 :把prod g2的租户漂移到prod g0环境
		Release -&amp;gt;&amp;gt; ReleaseG2: Release分支合并到RelaseG2
		Note over ReleaseG2:jenkins构建prod g2环境
		Note over Release,ReleaseG2 :把大部分prod g0租户漂移回prod g2环境

		Note right of ReleaseG2:beta环境全量发布
		Note over Release,ReleaseG2 :把beta g2的租户漂移到beta g0环境
		Note over ReleaseG2:jenkins构建beta g2环境
		Note over Release,ReleaseG2 :把大部分beta g0租户漂移回beta g2环境

		ReleaseG2 -&amp;gt;&amp;gt; MasterG2 : 全量发布完成，ReleaseG2合并到MasterG2



		Note over MasterG2,ReleaseG2:Bg2/F2分支开发流程(解决线上g2环境的bug(Bg2分支),或G2环境的需求(F2分支))
		MasterG2 -&amp;gt;&amp;gt;+ Bg2: 拉取Bg2/F2分支	
		Bg2 --&amp;gt;&amp;gt; Bg2: 开发自测
		Bg2 -&amp;gt;&amp;gt; Test: 合并到test分支
		Note over Test:jenkins构建测试环境，并验证
		alt 测试环境验证通过
			Bg2 -&amp;gt;&amp;gt; ReleaseG2 : 合并到ReleaseG2分支
			alt 合并成功，没有冲突
				Note over ReleaseG2:jenkins构建beta g2环境
				Note over ReleaseG2:在beta g2环境验证
				alt beta g2环境验证通过
					Note over ReleaseG2: jenkins构建prod g1环境
					Note right of  ReleaseG2: 从G2选取部分租户&lt;br /&gt;漂移到prod g1
					alt prod g1的租户验证通过
						Note over ReleaseG2: 在prod g1等待	
					else prod g1租户验证不通过
						ReleaseG2 --&amp;gt;&amp;gt; Bg2:验证不通过，查原因，重新提测
					end
					Note right of  ReleaseG2: 租户在prod g1上&lt;br /&gt;过了观察期(如1天)
					Note right of  ReleaseG2: 把租户全部漂移&lt;br /&gt;到prod g1
					Note over ReleaseG2: jenkins构建prod g2环境
					Note right of  ReleaseG2: 把prod g1租户&lt;br /&gt;全部漂移到prod g2
					ReleaseG2 -&amp;gt;&amp;gt; Release : 合并到Release
					ReleaseG2 -&amp;gt;&amp;gt; MasterG2: 合并到MasterG2&lt;br /&gt;并删除Bg2分支
					deactivate Bg2
				else beta g2环境验证不通过
					ReleaseG2 --&amp;gt;&amp;gt; Bg2: beta g2验证不通过，查原因，重新提测
				end
			else Bg2/F2合并ReleaseG2,发生冲突 
				ReleaseG2 --&amp;gt;&amp;gt; Bg2:解决冲突，重新接测	
			end
		else
			Test --&amp;gt;&amp;gt; Bg2:测试环境不通过，查原因，重新提测
		end
&lt;/div&gt;</content><author><name></name></author><summary type="html">sequenceDiagram participant MasterG2 participant Master participant Dev as F分支 participant Bg0 participant Bg2 as Bg2/F2 participant Test participant Release participant ReleaseG2</summary></entry><entry><title type="html">Dependence and Data Provider in PHPUnit</title><link href="http://localhost:4000/php-unit-test-note2/" rel="alternate" type="text/html" title="Dependence and Data Provider in PHPUnit" /><published>2019-01-22T00:00:00+08:00</published><updated>2019-01-22T00:00:00+08:00</updated><id>http://localhost:4000/php-unit-test-note2</id><content type="html" xml:base="http://localhost:4000/php-unit-test-note2/">&lt;h3 id=&quot;牛人的话翻译后&quot;&gt;牛人的话(翻译后)&lt;/h3&gt;

&lt;p&gt;Adrian Kuhn et.al:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;写单元测试是一个非常好的做法，帮助开发定位和修复bug，重构代码并作为测试软件的一个单元的文档。
为了能达到这个效果，单元测试要考虑到程序中所有路径。一个方法或函数通常只覆盖一个特殊的路径。
然而，一个测试方法并不是一个封闭的，独立的实体。通常在测试方法之间的隐式依赖，就藏在某个测试场景的实现中。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;test-dependencies&quot;&gt;Test Dependencies&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;producer: 返回值给其他方法使用的方法&lt;/li&gt;
  &lt;li&gt;consumer: 依靠别的方法和它们的返回值的方法&lt;/li&gt;
  &lt;li&gt;一个方法，可以兼顾这个两个角色&lt;/li&gt;
  &lt;li&gt;consumer方法需要在方法注释中标注@depends testFunc&lt;/li&gt;
  &lt;li&gt;一个consumer方法可以一个或多个@depends,当有多个@depends时，@depends的声明顺序就是consumer参数顺序
    &lt;ul&gt;
      &lt;li&gt;参数的传递，默认是引用传参&lt;/li&gt;
      &lt;li&gt;@depends clone 就是深复制，传值传参&lt;/li&gt;
      &lt;li&gt;@depends shallowClone 浅复制&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;consumer方法有多个@depends时，要确保这些producer方法要写在consumer的前面，不然就会出现skip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PHPUnit\Framework\TestCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MultipleDependenciesTest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testProducerFirst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testProducerSecond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;sd&quot;&gt;/**
	 * @depends testProducerFirst
	 * @depends testProducerSecond
	 */&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testConsumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'second'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;data-providers&quot;&gt;Data Providers&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;某个方法的注释中用 &lt;code&gt;@dataProvider &lt;/code&gt;这个特殊注释 标识了某个方法，则这个方法就是data provider
    &lt;ul&gt;
      &lt;li&gt;如&lt;code&gt;@dataProvider testFunc&lt;/code&gt; testFunc就是data provider&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;data provider返回值必须要是n维数组(n&amp;gt;=2),或可以迭代的对象(Iterator),并且这个对象每一次迭代都要返回一个数组&lt;/li&gt;
  &lt;li&gt;测试方法的参数可以由一个或多个data provider 提供&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;当测试方法同时有@dataProvider和@depends时，@dataProvider的参数要先于@depends&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;demo&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PHPUnit\Framework\TestCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DependencyAndDataProviderComboTest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'provider1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'provider2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testProducerFirst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testProducerSecond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;sd&quot;&gt;/**
	 * @depends testProducerFirst
	 * @depends testProducerSecond
	 * @dataProvider provider
	 */&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testConsumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'provider1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'second'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;func_get_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
			&lt;span class=&quot;sd&quot;&gt;/**
			func_get_args()依次是
			['provider1', 'first', 'second'],
			['provider2', 'first', 'second']
			因为 provider迭代了两次，第一次返回['provider1'], 字符串'provider1'就传递给了testConsumer，作为第一个参数，
			**/&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">牛人的话(翻译后)</summary></entry><entry><title type="html">Some Vim skills</title><link href="http://localhost:4000/vim-some-skills/" rel="alternate" type="text/html" title="Some Vim skills" /><published>2019-01-22T00:00:00+08:00</published><updated>2019-01-22T00:00:00+08:00</updated><id>http://localhost:4000/vim-some-skills</id><content type="html" xml:base="http://localhost:4000/vim-some-skills/">&lt;h4 id=&quot;编辑后发现需要root权限&quot;&gt;编辑后，发现需要root权限&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:w ! sudo tee %
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;做计算&quot;&gt;做计算&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;insert模式，ctrl+r =3600*24*7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;查看字符ascii码16进制8进制&quot;&gt;查看字符ascii码,16进制，8进制&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;common模式，ga 查看光标下的字符的ascii码	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;插入unicode字符&quot;&gt;插入unicode字符&lt;/h4&gt;
&lt;h4 id=&quot;大小写转换&quot;&gt;大小写转换&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~          将光标下的字母改变大小写
3m~         将光标位置开始的3个字母改变其大小写
g~~        改变当前行字母的大小写
U          将可视模式下选择的字母全改成大写字母
u          将可视模式下选择的字母全改成小写
gUU        将当前行的字母改成大写
3gUU       将从光标开始到下面3行字母改成大写
guu       将当前行的字母全改成小写
gUw       将光标下的单词改成大写。
guw       将光标下的单词改成小写。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;insert-mode-缩进&quot;&gt;Insert mode 缩进&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ctrl+t &amp;gt;	
crtl+d &amp;lt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;的作用&quot;&gt;!的作用&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 切换布尔选项，:set number!
- 执行shell命令 :! ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">编辑后，发现需要root权限</summary></entry><entry><title type="html">PHP unit test demo</title><link href="http://localhost:4000/php-unit-test/" rel="alternate" type="text/html" title="PHP unit test demo" /><published>2019-01-20T00:00:00+08:00</published><updated>2019-01-20T00:00:00+08:00</updated><id>http://localhost:4000/php-unit-test</id><content type="html" xml:base="http://localhost:4000/php-unit-test/">&lt;h3 id=&quot;大牛的话翻译后&quot;&gt;大牛的话(翻译后)&lt;/h3&gt;

&lt;p&gt;Martin Fowler:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;无论什么时候,当你试着在print或其他debugger表达式里输入内容时，你应该把它写成一个测试用例
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;单元测试是代码质量的第一道关口。做好了单元测试，有利于尽早发现问题，解决问题。对CI/CD来说也是很重要的一个环节。当然，写单元测试会增加编写代码的工作量，所以一些公司或项目为了赶工期，单元测试就被忽略了，尽管大家都知道这个很重要。出来混，迟早要还的。欠下的，会加倍偿还。特别是随着产品的迭代，这个问题会逐渐凸显出来。&lt;/p&gt;

&lt;p&gt;先来說一下php的单元测试,使用的是PHPUnit&lt;/p&gt;
&lt;h3 id=&quot;install&quot;&gt;Install&lt;/h3&gt;

&lt;p&gt;参考文档：https://phpunit.readthedocs.io/en&lt;/p&gt;

&lt;p&gt;linux下简单的几个步骤如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$wget https://phar.phpunit.de/phpunit-7.5.2.phar
$chmod +x phpunit-7.5.2.phar
$sudo mv phpunit-7.5.2.phar /usr/local/bin/phpunit
$phpunit --version
PHPUnit 7.5.2 by Sebastian Bergmann and contributors.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;小试牛刀&quot;&gt;小试牛刀&lt;/h3&gt;

&lt;p&gt;创建一个文件比如test.php，内容如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PHPUnit\Framework\TestCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StackTest&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testPushAndPop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

		&lt;span class=&quot;nb&quot;&gt;array_push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;sd&quot;&gt;/**
	* @test
	*/&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行测试phpunit ./test.php,返回结果如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PHPUnit 7.5.2 by Sebastian Bergmann and contributors.

F.                                                                  2 / 2 (100%)

Time: 183 ms, Memory: 10.00MB

There was 1 failure:

1) StackTest::testPushAndPop
Failed asserting that 0 is identical to 1.

/home/wm/code/php/phpunit/test.php:16

FAILURES!
Tests: 2, Assertions: 8, Failures: 1.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;测试结果告诉我们，有两个测试方法，有8处断言，有一处失败，失败的原因是断言0和1相等，在代码的第16行。&lt;/p&gt;

&lt;p&gt;我们修改16行为: $this-&amp;gt;assertSame(0, count($stack));再执行测试&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PHPUnit 7.5.2 by Sebastian Bergmann and contributors.

..                                                                  2 / 2 (100%)

Time: 205 ms, Memory: 10.00MB

OK (2 tests, 8 assertions)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过了测试^_^&lt;/p&gt;

&lt;h3 id=&quot;几点说明&quot;&gt;几点说明&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.测试的类应该命名格式为ClassTest,大驼峰，而且以Test结尾,文件名和类名相同（我个人推测）
2.测试的类要继承PHPUnit\Framework\TestCase(大多数情况下)
3.测试的方法都要是public,声明一个方法是否是测试方法有如下两个方法
	- 方法名称的格式：test*
	- 或则在方法的注释中添加@test,来标识该方法是测试方法,如上
4.在测试方法里有很多断言方法,如上assertSame(),assertEquals()
5.出现失败后，就不会继续执行了。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">大牛的话(翻译后)</summary></entry><entry><title type="html">A git branch model</title><link href="http://localhost:4000/git-branch-model/" rel="alternate" type="text/html" title="A git branch model" /><published>2019-01-18T00:00:00+08:00</published><updated>2019-01-18T00:00:00+08:00</updated><id>http://localhost:4000/git-branch-model</id><content type="html" xml:base="http://localhost:4000/git-branch-model/">&lt;div class=&quot;mermaid&quot;&gt;
	sequenceDiagram
		participant MasterG2
		participant Master
		participant Dev as F分支
		participant Bg0
		participant Bg2 as Bg2/F2
		participant Test
		participant Release
		participant ReleaseG2

		Note over Master,Release:特性分支(f分支)开发流程 
		Master -&amp;gt;&amp;gt;+ Dev:开发拉f分支
		Dev --&amp;gt;&amp;gt; Dev: 开发自测
		loop 提测
			Dev -&amp;gt;&amp;gt; Test:F分支合并到Test分支
			Note over Test:是否有冲突
			alt 没有有冲突
				Note over Test :jenkins构建test环境
				Note over Test:验证测试环境
				alt 测试环境验证通过
					Note over Dev :F分支能否合并到Release分支
					alt 能合并
						Dev -&amp;gt;&amp;gt; Release:F分支合并到Release
						Note over Release :是否有冲突
						alt 没有冲突
							Note over Release :jenkins构建beta g0
							Note over Release:验证beta g0环境
							alt beta g0环境验证通过
								Note over Release: 积累一天
								Note over Release : jenkins构建prod g0
								Note over Release : 验证prod g0
								alt prod g0验证通过
									Release -&amp;gt;&amp;gt;- Dev : 删除所有的合并到Relase的F分支
									Release -&amp;gt;&amp;gt; Master : Release分支合并到Master
								else prod g0没有验证通过
									Release --&amp;gt;&amp;gt; Dev: prod g0验证没有通过，排查原因
								end
							else
								Release --&amp;gt;&amp;gt; Dev: beta g0测试不通过, 排查问题
							end
						else  有冲突
							Release --&amp;gt;&amp;gt; Dev : 开发同学先解决冲突,再次提测
						end
					else F分支不能合并到Release,原因：
						Note over Dev: 过了14:00
						Note over Dev: 距离灰度发布不足两天
						Note over Dev: 灰度发布期间
					end
				else 测试环境验证不通过
					Test --&amp;gt;&amp;gt; Dev:测试环境不通过,排查问题
				end
			else 有冲突
				Test --&amp;gt;&amp;gt; Dev :先解决冲突，再提测
			end
		end

		Note over Master,Release:Bg0分支开发流程(解决线上g0环境的bug)
		Note over Release: 灰度前后验证prod G0环境
		alt prod g0环境验证通过
		else prod g0验证不通过
			Master -&amp;gt;&amp;gt;+ Bg0 : 从Master拉取一个Bg0分支
			Bg0 --&amp;gt;&amp;gt; Bg0 : 开发自测
			Bg0 -&amp;gt;&amp;gt; Test : 合并到Test分支
			alt Bg0合并到Test没有冲突
				Note over Test:	jenkins 构建测试环境，并验证
				alt 测试环境验证通过
					Bg0 -&amp;gt;&amp;gt; Release: Bg0合并到Release分支 
					alt 合并没有冲突
						Note over Release :jenkins构建beta g0环境，并验证
						alt beta g0验证通过
							Note over Release:构建 prod g0,并验证
							alt prod g0通过
								Release -&amp;gt;&amp;gt; Master: 合并到Master分支,删除Bg0分支
								deactivate Bg0
							else  失败
								Release --&amp;gt;&amp;gt; Bg0 : prod g0未通过，排查原因，再提测
							end
						else 失败
							Release --&amp;gt;&amp;gt; Bg0: beta g0未通过，排查原因，再提测	
						end
					else Bg0合并Release发生冲突
						Release --&amp;gt;&amp;gt; Bg0: 解决冲突，重新提测
					end
				else 测试环境验证不通过
					Test --&amp;gt;&amp;gt; Bg0: 查找原因，重新提测
				end
			else Bg0合并到Test有冲突 
				Test --&amp;gt;&amp;gt; Bg0:解决冲突，重新提测	
			end
		end

		Note over MasterG2, ReleaseG2 : 全量发布
		Note right of ReleaseG2:prod环境全量发布
		Note over Release,ReleaseG2 :把prod g2的租户漂移到prod g0环境
		Release -&amp;gt;&amp;gt; ReleaseG2: Release分支合并到RelaseG2
		Note over ReleaseG2:jenkins构建prod g2环境
		Note over Release,ReleaseG2 :把大部分prod g0租户漂移回prod g2环境

		Note right of ReleaseG2:beta环境全量发布
		Note over Release,ReleaseG2 :把beta g2的租户漂移到beta g0环境
		Note over ReleaseG2:jenkins构建beta g2环境
		Note over Release,ReleaseG2 :把大部分beta g0租户漂移回beta g2环境

		ReleaseG2 -&amp;gt;&amp;gt; MasterG2 : 全量发布完成，ReleaseG2合并到MasterG2



		Note over MasterG2,ReleaseG2:Bg2/F2分支开发流程(解决线上g2环境的bug(Bg2分支),或G2环境的需求(F2分支))
		MasterG2 -&amp;gt;&amp;gt;+ Bg2: 拉取Bg2/F2分支	
		Bg2 --&amp;gt;&amp;gt; Bg2: 开发自测
		Bg2 -&amp;gt;&amp;gt; Test: 合并到test分支
		Note over Test:jenkins构建测试环境，并验证
		alt 测试环境验证通过
			Bg2 -&amp;gt;&amp;gt; ReleaseG2 : 合并到ReleaseG2分支
			alt 合并成功，没有冲突
				Note over ReleaseG2:jenkins构建beta g2环境
				Note over ReleaseG2:在beta g2环境验证
				alt beta g2环境验证通过
					Note over ReleaseG2: jenkins构建prod g2环境
					alt prod g2验证通过
						ReleaseG2 -&amp;gt;&amp;gt; Release : 合并到Release
						ReleaseG2 -&amp;gt;&amp;gt; MasterG2: 合并到MasterG2,并删除Bg2分支
						deactivate Bg2
					else
						ReleaseG2 --&amp;gt;&amp;gt; Bg2: prod g2验证没有通过
					end 
				else beta g2环境验证不通过
					ReleaseG2 --&amp;gt;&amp;gt; Bg2: beta g2验证不通过，查原因，重新提测
				end
			else Bg2/F2合并ReleaseG2,发生冲突 
				ReleaseG2 --&amp;gt;&amp;gt; Bg2:解决冲突，重新接测	
			end
		else
			Test --&amp;gt;&amp;gt; Bg2:测试环境不通过，查原因，重新提测
		end
&lt;/div&gt;</content><author><name></name></author><summary type="html">sequenceDiagram participant MasterG2 participant Master participant Dev as F分支 participant Bg0 participant Bg2 as Bg2/F2 participant Test participant Release participant ReleaseG2</summary></entry><entry><title type="html">Vim command mode–Ex(1)</title><link href="http://localhost:4000/vim-command-model_1/" rel="alternate" type="text/html" title="Vim command mode--Ex(1)" /><published>2019-01-17T00:00:00+08:00</published><updated>2019-01-17T00:00:00+08:00</updated><id>http://localhost:4000/vim-command-model_1</id><content type="html" xml:base="http://localhost:4000/vim-command-model_1/">&lt;p&gt;最早，现有ed，ed为ex之父，ex为vi之父，而vi为vim之父 —- The Old Testament of Unix&lt;/p&gt;

&lt;p&gt;这些早期的Unix编辑器，依旧可以在vim中找到它们的影子，他们没有消失，只是换了一个方式存在。&lt;/p&gt;

&lt;p&gt;我打算挖一坑，来說一下命令行模式，来看一下vim身体里流淌着多少它的祖先ex(行编辑器)的血液。&lt;/p&gt;

&lt;p&gt;在普通模式下，按下&lt;code&gt;:&lt;/code&gt;就会进入命令行模式，和shell下的命令行很相似;输入一条命令，然后回车执行。按下&lt;code&gt;Esc&lt;/code&gt;键就可以回到普通模式。这些在命令行模式下执行的命令，又可以称为Ex命令。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;常见命令&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;用途说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:edit&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;编辑一个文件，editk可以简写为e&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:write&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;写文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:tabnew&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;创建一个tab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:prev/:next&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当用vim一次打开多个文件(如：vim a.txt b.txt)后，可以用他们来回切换文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:bprev/:bnext&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;当打开多个缓冲区后，可以用他们来回切换缓冲区，不过我习惯&lt;code&gt;ctrl&lt;/code&gt;+6来回切换最近两个缓冲区&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]delete [x]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;删除指定范围的行到寄存器[x]中,delete可以简写为d&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]yank [x]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;复制指定范围的行到寄存器[x]中,yank可以简写为y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[line]put [x]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;把寄存器x的内容，粘贴到指定行的后面,put不能简写&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]copy {address}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;把指定范围的行复制到{address}指定的行之下,copy可以简写为co或t&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]move {address}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;把指定范围的行移动到{address}指定的行之下,move可简写为m&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]join&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;把指定范围内的行连接起来，成为一行，&lt;code&gt;J&lt;/code&gt;也可以起连接行的作用(当前行和下一行）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]normal {commands}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;对指定范围内的每一行执行普通模式的命令{commands}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]substitute/{pattern}/{string}/{flags}&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;把指定范围内的行出现的{pattern}匹配的地方替换为{string}，substitute 可以简写为s(vim的正则替换，我先挖个坑，后面再填上)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;:[range]global/{pattern}/[cmd]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;把指定范围内的行匹配{pattern}的所有行之下Ex命令{cmd}，这个特性还要进一步挖掘&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;range的写法：
	- 一个数字如23,34;代表指定的行
	- 两个数字逗号分割: 2,5  代表从第2到第5行
	- num,.  从第num行到当前行，比如我们要从第7行删除所有内容，我们先按G,光标会移动到最后一行，然后输入 :7,. d&lt;/p&gt;

&lt;p&gt;总之，Ex命令可以一次执行，多处修改。&lt;/p&gt;</content><author><name></name></author><category term="vim" /><category term="command model" /><category term="Ex" /><summary type="html">最早，现有ed，ed为ex之父，ex为vi之父，而vi为vim之父 —- The Old Testament of Unix</summary></entry><entry><title type="html">Sequence diagrams in Mermaid</title><link href="http://localhost:4000/mermaid-notes-sequence-diagram/" rel="alternate" type="text/html" title="Sequence diagrams in Mermaid" /><published>2019-01-16T00:00:00+08:00</published><updated>2019-01-16T00:00:00+08:00</updated><id>http://localhost:4000/mermaid-notes-sequence-diagram</id><content type="html" xml:base="http://localhost:4000/mermaid-notes-sequence-diagram/">&lt;p&gt;时序图（Sequence Diagram），又名序列图、循序图，是一种UML交互图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。它可以表示用例的行为顺序，当执行一个用例行为时，其中的每条消息对应一个类操作或状态机中引起转换的触发事件。&lt;/p&gt;

&lt;h2 id=&quot;一个小demo&quot;&gt;一个小demo&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;	sequenceDiagram
		Alice -&amp;gt;&amp;gt; John: Hi John,nice day, Uh huh?
		John  --&amp;gt;&amp;gt; Alice: Yeap
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;mermaid&quot;&gt;
	sequenceDiagram
		Alice -&amp;gt;&amp;gt; John: Hi John,nice day, Uh huh?
		John  --&amp;gt;&amp;gt; Alice: Yeap
&lt;/div&gt;

&lt;h2 id=&quot;基本概念&quot;&gt;基本概念&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;participant(参与者,先定义的会先现实出来)&lt;/li&gt;
  &lt;li&gt;alice(别名，参与者可以起别名,定义别名后，就只能用别名了,如果混用，会是两个参与者）&lt;/li&gt;
  &lt;li&gt;message(消息，[participant][arrow][participant]:Message text)&lt;/li&gt;
  &lt;li&gt;activation(激活，可对参与者进行激活和去激活，可以重复进行）
    &lt;ul&gt;
      &lt;li&gt;activate/deactivate [participant] 激活或取消&lt;/li&gt;
      &lt;li&gt;--&amp;gt;+  加号激活&lt;/li&gt;
      &lt;li&gt;--&amp;gt;-  减号取消,通过+/-明显比较方便(但是，有时候会失效)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;note(便签, Note [right of | left of | over] [participant])
    &lt;ul&gt;
      &lt;li&gt;Note right of John: Foo12345&lt;/li&gt;
      &lt;li&gt;Note left of Alice: An note&lt;/li&gt;
      &lt;li&gt;Note over Alice,John: Cross the world&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;loop(循环)&lt;/li&gt;
  &lt;li&gt;alt(分支，选择,相当于 if else )&lt;/li&gt;
  &lt;li&gt;opt(可选，相当于 if)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sequenceDiagram
  participant John
  participant A as  Alice
  A -&amp;gt;&amp;gt; John : Hi,John
  Note left of John: Foo12345
  John  --&amp;gt;&amp;gt; A: Alice..I
  Note right of A : An note
  activate A
  A -&amp;gt;&amp;gt;+ John :  1
  John --&amp;gt;&amp;gt; A : 2
  deactivate A
  A -x- John : 3
  John --x A :4 
  loop Every 30 seconds
      John --&amp;gt;&amp;gt; A : heart bits
      A --&amp;gt;&amp;gt; John : ACK
  end
  A -&amp;gt;&amp;gt; John : Are you ok?
  alt is ok
      John --&amp;gt;&amp;gt;A: Ok啊
  else so so 
      John --&amp;gt;&amp;gt;A: 还活着
  else
      John --&amp;gt;&amp;gt;A: 还不错
  end
  Note over A, John: Over!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;mermaid&quot;&gt;
	sequenceDiagram
		participant John
		participant A as  Alice
		A -&amp;gt;&amp;gt; John : Hi,John
		Note left of John: Foo12345
		John  --&amp;gt;&amp;gt; A: Alice..I
		Note right of A : An note
		activate A
		A -&amp;gt;&amp;gt;+ John :  1
		John --&amp;gt;&amp;gt; A : 2
		deactivate A
		A -x- John : 3
		John --x A :4 
		loop Every 30 seconds
			John --&amp;gt;&amp;gt; A : 还在么？(heart bits)
			alt is ok
				A -&amp;gt;&amp;gt; John : 在呢，我还在，莫担心
			else  没反应
				John --&amp;gt;&amp;gt; John : Alice is lose,释放他的资源
			end
		end
		A -&amp;gt;&amp;gt; John : Are you ok?
		alt is ok
			John --&amp;gt;&amp;gt;A: Ok啊
		else so so 
			John --&amp;gt;&amp;gt;A: 还活着
		else
			John --&amp;gt;&amp;gt;A: 还不错
		end
		opt 心情好
			A --&amp;gt;&amp;gt; Tom : 出来撸串
		end
		Note over A, John: Over!
&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;箭头类型&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;实线无箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;--&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;点线无箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&amp;gt;&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;实线有箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;--&amp;gt;&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;点线有箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-x&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;实线带叉和箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;--x&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;点线带叉和箭头&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;微信jsapi支付流程&quot;&gt;微信JSAPI支付流程&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;文档：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_4&lt;/li&gt;
  &lt;li&gt;官方流程图：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
	&lt;img src=&quot;/images/wechat_pay_uml.png&quot; alt=&quot;微信JSAPI支付流程&quot; /&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;用mermaid模仿上图&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;	sequenceDiagram
		participant User
		participant WechatApp
		participant MB as MerchantBackend
		participant WPS as WechatPaySystem
		
		MB -&amp;gt;&amp;gt; MB:1.生成图文信息链接或二维码
		MB --&amp;gt;&amp;gt;+ User :展示给用户
		User-&amp;gt;&amp;gt;+ WechatApp:2.点击链接或扫描二维码在微信浏览器打开商户H5网页
		WechatApp -&amp;gt;&amp;gt;+ MB:网页内请求生成订单
		MB -&amp;gt;&amp;gt;+ MB:4.生成商户订单
		deactivate MB
		MB -&amp;gt;&amp;gt;+ WPS:5.调用统一下单API
		WPS -&amp;gt;&amp;gt;+ WPS:生成预付单
		deactivate WPS
		WPS --&amp;gt;&amp;gt; MB:返回预付单信息(prepay_id)
		deactivate WPS
		WPS --&amp;gt;&amp;gt; MB:返回预付单信息(prepay_id)
		MB -&amp;gt;&amp;gt;+ MB:6.生成JSAPI页面调用的支付参数并签名	
		deactivate MB
		MB --&amp;gt;&amp;gt; WechatApp:返回支付参数(prepay_id.paySign等)
		deactivate WechatApp
		User -&amp;gt;&amp;gt;+ WechatApp:7.用户点击发起支付
		WechatApp -&amp;gt;&amp;gt;+ WPS: JSAPI接口请求支付
		WPS -&amp;gt;&amp;gt;+ WPS:8.检查参数合法性和授权权限
		deactivate MB
		WPS --&amp;gt;&amp;gt; WechatApp: 返回验证结果，并要求支付授权
		deactivate WPS
		WechatApp -&amp;gt;&amp;gt;+ WechatApp:提示输入密码
		deactivate WechatApp
		deactivate WechatApp
		User -&amp;gt;&amp;gt;+ WechatApp:9.确认支付，输入密码
		WechatApp -&amp;gt;&amp;gt;+ WPS:提交授权
		WPS -&amp;gt;&amp;gt;+ WPS:验证授权
		deactivate WPS
		alt 并行处理
			WPS -&amp;gt;&amp;gt;+ MB:10.异步通知支付结果			
		else
			MB --&amp;gt;&amp;gt; WPS:11.告知微信通知处理结果
			deactivate MB
		else
			WPS --&amp;gt;&amp;gt; WechatApp:12.返回支付结果，并发微信消息提示
			deactivate WPS
		end
		WechatApp --&amp;gt;&amp;gt; User:展示支付信息给用户
		deactivate User
		deactivate WechatApp
		
		WechatApp -&amp;gt;&amp;gt;+ WechatApp: 微信跳转回商户H5页面
		activate WechatApp
		WechatApp -&amp;gt;&amp;gt;+ MB:13.查询商户后台支付结果
		alt 支付结果
			else 未收到支付通知
			MB -&amp;gt;&amp;gt;+ WPS:14.调用查询API，查询支付结果
			WPS --&amp;gt;&amp;gt; MB:返回支付结果
			deactivate WPS
		end
		MB --&amp;gt;&amp;gt; WechatApp:返回支付结果
		WechatApp -&amp;gt;&amp;gt;+ WechatApp:15.商户发货及支付后个性化页面提示
		deactivate WechatApp
		deactivate WechatApp
		deactivate WechatApp

&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;mermaid&quot;&gt;
	sequenceDiagram
		participant User
		participant WechatApp
		participant MB as MerchantBackend
		participant WPS as WechatPaySystem
		
		MB -&amp;gt;&amp;gt; MB:1.生成图文信息链接或二维码
		MB --&amp;gt;&amp;gt;+ User :展示给用户
		User-&amp;gt;&amp;gt;+ WechatApp:2.点击链接或扫描二维码在微信浏览器打开商户H5网页
		WechatApp -&amp;gt;+ MB:网页内请求生成订单
		MB -&amp;gt;&amp;gt;+ MB:4.生成商户订单
		deactivate MB
		MB -&amp;gt;&amp;gt;+ WPS:5.调用统一下单API
		WPS -&amp;gt;&amp;gt;+ WPS:生成预付单
		deactivate WPS
		WPS --&amp;gt;&amp;gt; MB:返回预付单信息(prepay_id)
		deactivate WPS
		WPS --&amp;gt;&amp;gt; MB:返回预付单信息(prepay_id)
		MB -&amp;gt;&amp;gt;+ MB:6.生成JSAPI页面调用的支付参数并签名	
		deactivate MB
		MB --&amp;gt;&amp;gt; WechatApp:返回支付参数(prepay_id.paySign等)
		deactivate WechatApp
		User -&amp;gt;&amp;gt;+ WechatApp:7.用户点击发起支付
		WechatApp -&amp;gt;&amp;gt;+ WPS: JSAPI接口请求支付
		WPS -&amp;gt;&amp;gt;+ WPS:8.检查参数合法性和授权权限
		deactivate MB
		WPS --&amp;gt;&amp;gt; WechatApp: 返回验证结果，并要求支付授权
		deactivate WPS
		WechatApp -&amp;gt;&amp;gt;+ WechatApp:提示输入密码
		deactivate WechatApp
		deactivate WechatApp
		User -&amp;gt;&amp;gt;+ WechatApp:9.确认支付，输入密码
		WechatApp -&amp;gt;&amp;gt;+ WPS:提交授权
		WPS -&amp;gt;&amp;gt;+ WPS:验证授权
		deactivate WPS
		alt 并行处理
			WPS -&amp;gt;&amp;gt;+ MB:10.异步通知支付结果			
		else
			MB --&amp;gt;&amp;gt; WPS:11.告知微信通知处理结果
			deactivate MB
		else
			WPS --&amp;gt;&amp;gt; WechatApp:12.返回支付结果，并发微信消息提示
			deactivate WPS
		end
		WechatApp --&amp;gt;&amp;gt; User:展示支付信息给用户
		deactivate User
		deactivate WechatApp
		
		WechatApp -&amp;gt;&amp;gt;+ WechatApp: 微信跳转回商户H5页面
		activate WechatApp
		WechatApp -&amp;gt;&amp;gt;+ MB:13.查询商户后台支付结果
		alt 支付结果
			else 未收到支付通知
			MB -&amp;gt;&amp;gt;+ WPS:14.调用查询API，查询支付结果
			WPS --&amp;gt;&amp;gt; MB:返回支付结果
			deactivate WPS
		end
		MB --&amp;gt;&amp;gt; WechatApp:返回支付结果
		WechatApp -&amp;gt;&amp;gt;+ WechatApp:15.商户发货及支付后个性化页面提示
		deactivate WechatApp
		deactivate WechatApp
		deactivate WechatApp
&lt;/div&gt;

&lt;p&gt;回头可以画很多协议的原理图，比如http，tcp等等，先挖一个坑，后续再填上。
点击查看原文，图的预览效果应该更好一些。&lt;/p&gt;

&lt;p&gt;昨日，国内的公司发了三个社交app，多闪、马桶MT、聊天宝。我觉得互联网应该是要去中心化的, 特别是社交类的app，颠覆者，应该是去中心化的产品。&lt;/p&gt;

&lt;script src=&quot;http://localhost:4000/assets/js/vendor/mermaid.min.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><summary type="html">时序图（Sequence Diagram），又名序列图、循序图，是一种UML交互图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。它可以表示用例的行为顺序，当执行一个用例行为时，其中的每条消息对应一个类操作或状态机中引起转换的触发事件。</summary></entry><entry><title type="html">some picture of mermaid</title><link href="http://localhost:4000/mermaid-picture/" rel="alternate" type="text/html" title="some picture of mermaid" /><published>2019-01-15T00:00:00+08:00</published><updated>2019-01-15T00:00:00+08:00</updated><id>http://localhost:4000/mermaid-picture</id><content type="html" xml:base="http://localhost:4000/mermaid-picture/">&lt;div class=&quot;mermaid&quot;&gt;
	graph LR
	    id1(Start)--&amp;gt;id2(Stop)
	    style id1 fill:#f9f,stroke:#333,stroke-width:4px,width:70px,height:50px
		style id2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5
		linkStyle 0 stroke:#ff3,stroke-width:4px;

&lt;/div&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    c1--&amp;gt;a2
    subgraph one
    a1--&amp;gt;a2
    end
    subgraph two
    b1--&amp;gt;b2
    end
    subgraph three
    c1--&amp;gt;c2
    end

&lt;/div&gt;

&lt;div class=&quot;mermaid&quot;&gt;
	graph LR
		A1 --&amp;gt; B1
		A2 --- B2
		C --text in the link --- B3
		D ---|text_on_link| B4
		E --&amp;gt;|text| B5
		F -.-&amp;gt; B6
		F -.-&amp;gt;|text in line| Te
		H -.-&amp;gt;|text| Note
		N1 ==&amp;gt;|text| N3
		Node[&quot;dd#quot\;&quot;]
		Node1[&quot;#quot;A dec char:#9829;&quot;]
		Node === Node1
&lt;/div&gt;
&lt;div class=&quot;mermaid&quot;&gt;
	graph TB
		c1--&amp;gt;a2
		subgraph one
		a1--&amp;gt;a2
		end
		subgraph two
		b1--&amp;gt;b2
		end
		subgraph three
		c1--&amp;gt;c2
		end
&lt;/div&gt;
&lt;div class=&quot;mermaid&quot;&gt;
	graph LR
	    id1(Start)--&amp;gt;id2(Stop)
	    style id1 fill:#f9f,stroke:#333,stroke-width:4px,width:70px,height:50px
		style id2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5
		linkStyle 0 stroke:#ff3,stroke-width:4px;
&lt;/div&gt;

&lt;script src=&quot;http://localhost:4000/assets/js/vendor/mermaid.min.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><category term="mermaid" /><category term="jekyll" /><category term="github pages" /><summary type="html">graph LR id1(Start)--&amp;gt;id2(Stop) style id1 fill:#f9f,stroke:#333,stroke-width:4px,width:70px,height:50px style id2 fill:#ccf,stroke:#f66,stroke-width:2px,stroke-dasharray: 5, 5 linkStyle 0 stroke:#ff3,stroke-width:4px;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/images/abstract-5.jpg" /></entry></feed>